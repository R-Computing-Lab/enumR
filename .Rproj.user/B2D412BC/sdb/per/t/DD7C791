{
    "collab_server" : "",
    "contents" : "#' @title enumR simulation function\n#'\n#' @description XXXXXXXX\n#'\n#'\n#' @param x a correlation matrix or a data matrix\n#' @param n Maximum number of factors to extract. Needs to be larger than expected.\n#' @param rotate what rotation to use c(\"none\", \"varimax\", \"oblimin\",\"promax\")\n#' @param diagonal\tShould we fit the diagonal as well\n#' @param fm\t factoring method â€“ fm=\"pa\" Principal Axis Factor Analysis, fm = \"minres\" minimum residual (OLS) factoring fm=\"mle\" Maximum Likelihood FA, fm=\"pc\" Principal Components\"\n#' @param n.obs\t Number of observations if doing a factor analysis of correlation matrix. This value is ignored by VSS but is necessary for the ML factor analysis packag\n#' @param use\tIf doing covariances or Pearson R, should we use \"pairwise\" or \"complete cases\"\n#' @param cor\tWhat kind of correlation to find, defaults to Pearson but see fa for the choices\n#' ...\tparameters to pass to the factor analysis program The most important of these is if using a correlation matrix is covmat= xx\n#' @return\n\nenumRsimulation<-function(seed=12345,\n                ndatasets=200,\n                patternmatrix=NULL,\n                effectsmatrix=NULL,\n                #pattern matrix\n                nfactors =5,\n                loading=.5,\n                items=c(5,5,5,5,5),\n                ritems=c(2,2,2,2,2),\n                loading_norm=FALSE,\n                loading_norm_sd=.05,\n                # effects matrix\n                r=0,\n                r_norm =FALSE,\n                r_norm_SD =.015,\n                samplesize=300\n                ){\n###prep\nset.seed(seed)\nrequire(psych)\nrequire(GPArotation)\nrequire(GAIPE)\n\nsimulation<-ndatasets\n\n## Loadings\nLoadings<-loading\n\n## Correlated Factors\nFactorCor<-r\n\n## Sample Size\nsamplesize<-samplesize\n\n## Estimation\nmethod<-c(\"minres\",\"wls\",\"gls\",\"pa\",\"ml\",\"minchi\")\n\n## Number of factors to extract\nnfactors<-nfactors\n\n## Results\nmega<-data.frame(matrix(rep(0,56),nrow=1))\nnames(mega)<-c( \"dof\",\"chisq\",\"prob\",\"sqresid\",\"fit\", \"RMSEA\",\"RMSEA_lower\",\"RMSEA_upper\",\"BIC\",\"SABIC\",\"null.model\",\"null.dof\",\"null.chisq\",\"complex\",\"eChisq\",\"SRMR\",\"eCRMS\",\"eBIC\",\"TLI\",\"fa.fit\",\"fa.fit.off\",\"objective\",\"ENull\",\"eSABIC\",\"null.chisq1\" , \"TLI.m\",\"NFI.m\",\"CFI.m\",\"RMSEA_lower.m\",\"RMSEA_upper.m\",\"eRMS\",\"cfit.1\",\"cfit.2\",\"cfit.3\",\"cfit.4\",\"cfit.5\",\"cfit.6\",\"cfit.7\",\"cfit.8\",\"cfit.9\",\"cresidual.1\",\"cresidual.2\",\"cresidual.3\",\"cresidual.4\",\"cresidual.5\",\"cresidual.6\",\"cresidual.7\",\"cresidual.8\",\"cresidual.9\",\"map.values\",\"r\",\"samplesize\",\"loadings\",\"dataset\",\"error\",\"factor\")\nmega_null<-mega\nmega_null$error<- 1\n\npercentiles<-data.frame(c(1))\nnames(percentiles)<-\"ds\"\n\n\nif(is.null(patternmatrix)){\n  fmodel=GenFactorMatrix(nfactors=nfactors, items= items[1:nfactors], ritems=ritems[1:nfactors], loading=loading,loading_norm=loading_norm,loading_norm_sd=loading_norm_sd)\n}else{fmodel=patternmatrix}\n  if(is.null(effectmatrix)){\n    smodel=GenStructure(nfactors=nfactors,r=r,r_norm=r_norm,r_norm_sd=r_norm_sd)}else{smodel=effectmatrix}\n## Gen Data\nfor(d in 1:simulation) {\n        data=GenData(fmodel=fmodel,effect=smodel,n=samplesize)\n        cov<-cov(data)\n        test<-\ttry(results<- enumR(cov,n=nfactors,n.obs=samplesize,covar=TRUE,truemodel = TRUE), silent=TRUE)\n        if ('try-error' %in% class(test)) {results<- mega_null\n        } else {mega[d,]<- test\n        mega$factor[d]<-nfactors\n        mega$error[d]<- 0\n        }\n        mega$r[d]<-r\n        mega$samplesize[d]<-samplesize\n        mega$loadings[d]<-Loadings\n        mega$dataset[d]<-d\n\n        print(d)\n}\n\nds_true<-mega[mega$factor==nfactors,]\n\npercentiles$RMSEA_.95<-quantile(ds_true$RMSEA,.95)\npercentiles$MAP_.95<-quantile(ds_true$map.values,.95)\n#percentiles$chisq_.95<-quantile(ds_true$chisq,.95)\n#percentiles$BIC_.95<-quantile(ds_true$BIC,.95)\npercentiles$SRMR_.95<-quantile(ds_true$SRMR,.95)\n#percentiles$SABIC_.95<-quantile(ds_true$SABIC,.95)\n#percentiles$TLI_.95<-quantile(ds_true$TLI,.95)\npercentiles$chisq_sig_.95<-quantile(ds_true$prob,.95)\n#percentiles$RMSEA_.05<-quantile(ds_true$RMSEA,.05)\n#percentiles$MAP_.05<-quantile(ds_true$map.values,.05)\n#percentiles$chisq_.05<-quantile(ds_true$chisq,.05)\n#percentiles$BIC_.05<-quantile(ds_true$BIC,.05)\n#percentiles$SRMR_.05<-quantile(ds_true$SRMR,.05)\n#percentiles$SABIC_.05<-quantile(ds_true$SABIC,.05)\npercentiles$TLI_.05<-quantile(ds_true$TLI,.05)\npercentiles$chisq_sig_.05<-quantile(ds_true$prob,.05)\n\nreturn(list(percentiles,mega))\n}\n",
    "created" : 1497127199520.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2467256354",
    "id" : "DD7C791",
    "lastKnownWriteTime" : 1497225634,
    "last_content_update" : 1497225634,
    "path" : "C:/Dropbox/Lab/Research/Projects/Current/enumR/R/enumRsimulation.R",
    "project_path" : "R/enumRsimulation.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}